{"version":3,"sources":["webpack:///./examples/indexed.js"],"names":[],"mappings":"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","file":"indexed.js","sourcesContent":["\nimport 'rmc-list-view/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from 'rmc-list-view';\n\nconst NUM_SECTIONS = 20;\nconst NUM_ROWS_PER_SECTION = 10;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => {\n      return dataBlob[sectionID];\n    };\n    const getRowData = (dataBlob, sectionID, rowID) => {\n      return dataBlob[rowID];\n    };\n\n    const dataSource = new ListView.DataSource({\n      getRowData: getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    const dataBlob = {};\n    const sectionIDs = [];\n    const rowIDs = [];\n    for (let ii = 0; ii < NUM_SECTIONS; ii++) {\n      const sectionName = String.fromCharCode(65 + ii);\n      sectionIDs.push(sectionName);\n      dataBlob[sectionName] = sectionName;\n      rowIDs[ii] = [];\n\n      for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n        const rowName = `S${ii}, R${jj}`;\n        rowIDs[ii].push(rowName);\n        dataBlob[rowName] = rowName;\n      }\n    }\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs),\n      headerPressCount: 0,\n    };\n  },\n\n  render() {\n    return (<div style={{ margin: '10px auto', width: '80%', position: 'relative' }}>\n      <ListView.IndexedList\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span style={{ padding: 10 }}>header</span>}\n        renderFooter={() => <span style={{ padding: 10 }}>footer</span>}\n        renderSectionHeader={(sectionData) => (\n          <div style={{ color: 'blue', padding: 10, backgroundColor: '#ddd' }}>\n            {sectionData}\n          </div>\n        )}\n        renderRow={(rowData) => (<div style={{ padding: 10 }}>Hello: {rowData}</div>) }\n        renderScrollComponent={props => <MyScroller {...props} style={{ height: 600, overflow: 'auto' }} />}\n        quickSearchBarStyle={{\n          position: 'absolute',\n          top: 20, right: 30\n        }}\n        onQuickSearch={(sectionID) => console.log(sectionID) }\n        delayTime={1000}\n        delayActivityIndicator={\n          <div style={{padding: 25, textAlign: 'center' }}>delay rendering...</div>\n        }\n      />\n    </div>);\n  },\n});\n\nconst MyScroller = React.createClass({\n  render() {\n    const { children, style, onScroll } = this.props;\n    const divProps = { style, onScroll };\n    return (\n      <div className=\"c-s\" {...divProps}>\n        {children}\n      </div>\n    )\n  },\n});\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/indexed.js\n **/"],"sourceRoot":""}