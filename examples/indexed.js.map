{"version":3,"sources":["webpack:///./examples/indexed.js","webpack:///./examples/MyScroller.js"],"names":["NUM_SECTIONS","NUM_ROWS_PER_SECTION","Demo","createClass","getInitialState","getSectionData","dataBlob","sectionID","getRowData","rowID","dataSource","DataSource","getSectionHeaderData","rowHasChanged","row1","row2","sectionHeaderHasChanged","s1","s2","cloneWithRowsAndSections","headerPressCount","componentDidMount","setTimeout","sectionIDs","rowIDs","ii","sectionName","String","fromCharCode","push","jj","rowName","setState","state","render","margin","width","position","padding","sectionData","color","backgroundColor","rowData","props","height","overflow","textAlign","top","right","console","log","document","getElementById","React","throttle","fn","delay","allowSample","e","SCROLLVIEW","INNERVIEW","MyScroller","handleScroll","onScroll","ev","throttleScroll","scrollEventThrottle","throttleScrollExec","useZscroller","domScroller","findDOMNode","refs","scrollingX","scrollerOptions","addEventListener","componentWillUnmount","destroy","removeEventListener","children","className","style","contentContainerStyle","cloneElement","flex","Component"],"mappings":"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","file":"indexed.js","sourcesContent":["\nimport 'rmc-list-view/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from 'rmc-list-view';\nimport MyScroller from './MyScroller';\n\nconst NUM_SECTIONS = 20;\nconst NUM_ROWS_PER_SECTION = 10;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => {\n      return dataBlob[sectionID];\n    };\n    const getRowData = (dataBlob, sectionID, rowID) => {\n      return dataBlob[rowID];\n    };\n\n    const dataSource = new ListView.DataSource({\n      getRowData: getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections({}, [], []),\n      headerPressCount: 0,\n    };\n  },\n  componentDidMount() {\n    // simulate ajax\n    setTimeout(() => {\n      const dataBlob = {};\n      const sectionIDs = [];\n      const rowIDs = [];\n      for (let ii = 0; ii < NUM_SECTIONS; ii++) {\n        const sectionName = String.fromCharCode(65 + ii);\n        sectionIDs.push(sectionName);\n        dataBlob[sectionName] = sectionName;\n        rowIDs[ii] = [];\n\n        for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n          const rowName = `S${ii}, R${jj}`;\n          rowIDs[ii].push(rowName);\n          dataBlob[rowName] = rowName;\n        }\n      }\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs),\n      });\n    }, 1000);\n  },\n  render() {\n    return (<div style={{ margin: '10px auto', width: '80%', position: 'relative' }}>\n      <ListView.IndexedList\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span style={{ padding: 10 }}>header</span>}\n        renderFooter={() => <span style={{ padding: 10 }}>footer</span>}\n        renderSectionHeader={(sectionData) => (\n          <div style={{ color: 'blue', padding: 10, backgroundColor: '#ddd' }}>\n            {sectionData}\n          </div>\n        )}\n        renderRow={(rowData) => (<div style={{ padding: 10 }}>Hello: {rowData}</div>) }\n        renderScrollComponent={props => <MyScroller {...props}\n          style={{ height: 500, overflow: 'auto' }} />}\n        contentContainerStyle={{ textAlign: 'left' }}\n        quickSearchBarStyle={{\n          position: 'absolute',\n          top: 20, right: 30\n        }}\n        onQuickSearch={(sectionID) => console.log(sectionID)}\n        showQuickSearchIndicator={true}\n        delayTime={100}\n        delayActivityIndicator={\n          <div style={{padding: 25, textAlign: 'center' }}>delay rendering...</div>\n        }\n        sectionHeaderClassName=\"sh\"\n        sectionBodyClassName=\"sb\"\n      />\n    </div>);\n  },\n});\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n// WEBPACK FOOTER //\n// ./examples/indexed.js","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport DOMScroller from 'zscroller';\nimport assign from 'object-assign';\n\nconst throttle = function (fn, delay) {\n  let allowSample = true;\n  return function (e) {\n    if (allowSample) {\n      allowSample = false;\n      setTimeout(function () { allowSample = true; }, delay);\n      fn(e);\n    }\n  };\n};\n\nconst SCROLLVIEW = 'ScrollView';\nconst INNERVIEW = 'InnerScrollView';\n\nexport default class MyScroller extends React.Component {\n  componentDidMount() {\n    this.throttleScrollExec = this.throttleScroll();\n    if (this.props.useZscroller) {\n      this.domScroller = new DOMScroller(ReactDOM.findDOMNode(this.refs[INNERVIEW]), assign({}, {\n        scrollingX: false,\n        onScroll: this.throttleScrollExec,\n      }, this.props.scrollerOptions));\n    } else {\n      ReactDOM.findDOMNode(this.refs[SCROLLVIEW]).addEventListener('scroll', this.throttleScrollExec);\n    }\n  }\n  componentWillUnmount() {\n    if (this.props.useZscroller) {\n      this.domScroller.destroy();\n    } else {\n      ReactDOM.findDOMNode(this.refs[SCROLLVIEW]).removeEventListener('scroll', this.throttleScrollExec);\n    }\n  }\n  handleScroll = (e) => {\n    const { onScroll = (ev) => { } } = this.props;\n    onScroll(e);\n  }\n  throttleScroll = (e) => {\n    let handleScroll = (ev) => {};\n    if (this.props.scrollEventThrottle && this.props.onScroll) {\n      handleScroll = throttle(this.handleScroll, this.props.scrollEventThrottle);\n    }\n    return handleScroll;\n  }\n  render() {\n    const { children, className, style = {}, contentContainerStyle, useZscroller } = this.props;\n    return React.cloneElement(\n      <div ref={SCROLLVIEW} />, { className, style: useZscroller ? assign({}, {\n        position: 'relative',\n        overflow: 'hidden',\n        flex: 1,\n      }, style) : style },\n      <div ref={INNERVIEW} style={contentContainerStyle}>{children}</div>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./examples/MyScroller.js"],"sourceRoot":""}