{"version":3,"sources":["webpack:///./examples/indexed.js"],"names":[],"mappings":";;;;;;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,KAAM,eAAe,EAArB;AACA,KAAM,uBAAuB,EAA7B;;AAEA,KAAM,OAAO,gBAAM,WAAN,CAAkB;AAAA;AAC7B,kBAD6B,6BACX;AAChB,SAAM,iBAAiB,SAAjB,cAAiB,CAAC,QAAD,EAAW,SAAX,EAAyB;AAC9C,cAAO,SAAS,SAAT,CAAP;AACD,MAFD;AAGA,SAAM,aAAa,SAAb,UAAa,CAAC,QAAD,EAAW,SAAX,EAAsB,KAAtB,EAAgC;AACjD,cAAO,SAAS,KAAT,CAAP;AACD,MAFD;;AAIA,SAAM,aAAa,IAAI,sBAAS,UAAb,CAAwB;AACzC,mBAAY,UAD6B;AAEzC,6BAAsB,cAFmB;AAGzC,sBAAe,uBAAC,IAAD,EAAO,IAAP;AAAA,gBAAgB,SAAS,IAAzB;AAAA,QAH0B;AAIzC,gCAAyB,iCAAC,EAAD,EAAK,EAAL;AAAA,gBAAY,OAAO,EAAnB;AAAA;AAJgB,MAAxB,CAAnB;;AAOA,SAAM,WAAW,EAAjB;AACA,SAAM,aAAa,EAAnB;AACA,SAAM,SAAS,EAAf;AACA,UAAK,IAAI,KAAK,CAAd,EAAiB,KAAK,YAAtB,EAAoC,IAApC,EAA0C;AACxC,WAAM,2BAAyB,EAA/B;AACA,kBAAW,IAAX,CAAgB,WAAhB;AACA,gBAAS,WAAT,IAAwB,WAAxB;AACA,cAAO,EAAP,IAAa,EAAb;;AAEA,YAAK,IAAI,KAAK,CAAd,EAAiB,KAAK,oBAAtB,EAA4C,IAA5C,EAAkD;AAChD,aAAM,gBAAc,EAAd,WAAsB,EAA5B;AACA,gBAAO,EAAP,EAAW,IAAX,CAAgB,OAAhB;AACA,kBAAS,OAAT,IAAoB,OAApB;AACD;AACF;AACD,YAAO;AACL,mBAAY,WAAW,wBAAX,CAAoC,QAApC,EAA8C,UAA9C,EAA0D,MAA1D,CADP;AAEL,yBAAkB;AAFb,MAAP;AAID,IAnC4B;AAqC7B,YArC6B,qBAqCnB,OArCmB,EAqCV;AACjB,YAAQ;AAAA;AAAA,SAAK,OAAO,EAAE,SAAS,EAAX,EAAZ;AAAA;AAAqC;AAArC,MAAR;AACD,IAvC4B;AAyC7B,sBAzC6B,+BAyCT,WAzCS,EAyCI;AAC/B,YACE;AAAA;AAAA,SAAK,OAAO,EAAE,OAAO,MAAT,EAAiB,SAAS,EAA1B,EAA8B,iBAAiB,MAA/C,EAAZ;AACG;AADH,MADF;AAKD,IA/C4B;AAiD7B,SAjD6B,oBAiDpB;AACP,YAAQ;AAAA;AAAA;AACN,2DAAU,WAAV;AACE,qBAAY,KAAK,KAAL,CAAW,UADzB;AAEE,uBAAc;AAAA,kBAAM;AAAA;AAAA,eAAM,OAAO,EAAE,SAAS,EAAX,EAAb;AAAA;AAAA,YAAN;AAAA,UAFhB;AAGE,uBAAc;AAAA,kBAAM;AAAA;AAAA,eAAM,OAAO,EAAE,SAAS,EAAX,EAAb;AAAA;AAAA,YAAN;AAAA,UAHhB;AAIE,8BAAqB,KAAK,mBAJ5B;AAKE,oBAAW,KAAK,SALlB;AAME,2BANF;AAOE,sBAAa;AACX,wBAAa,EAAE,QAAQ,GAAV,EADF;AAEX,sBAAW,CAAC;AAFD,UAPf;AAYE,8BAAqB;AACnB,gBAAK;AADc;AAZvB;AADM,MAAR;AAkBD;AApE4B,EAAlB,CAAb;;AAuEA,oBAAS,MAAT,CAAgB,8BAAC,IAAD,OAAhB,EAA0B,SAAS,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"indexed.js","sourcesContent":["\nimport 'rmc-list-view/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from 'rmc-list-view';\n\nconst NUM_SECTIONS = 20;\nconst NUM_ROWS_PER_SECTION = 10;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => {\n      return dataBlob[sectionID];\n    };\n    const getRowData = (dataBlob, sectionID, rowID) => {\n      return dataBlob[rowID];\n    };\n\n    const dataSource = new ListView.DataSource({\n      getRowData: getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    const dataBlob = {};\n    const sectionIDs = [];\n    const rowIDs = [];\n    for (let ii = 0; ii < NUM_SECTIONS; ii++) {\n      const sectionName = `Section ${ii}`;\n      sectionIDs.push(sectionName);\n      dataBlob[sectionName] = sectionName;\n      rowIDs[ii] = [];\n\n      for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n        const rowName = `S${ii}, R${jj}`;\n        rowIDs[ii].push(rowName);\n        dataBlob[rowName] = rowName;\n      }\n    }\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs),\n      headerPressCount: 0,\n    };\n  },\n\n  renderRow(rowData) {\n    return (<div style={{ padding: 10 }}>Hello: {rowData}</div>);\n  },\n\n  renderSectionHeader(sectionData) {\n    return (\n      <div style={{ color: 'blue', padding: 10, backgroundColor: '#ddd' }}>\n        {sectionData}\n      </div>\n    );\n  },\n\n  render() {\n    return (<div>\n      <ListView.IndexedList\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span style={{ padding: 10 }}>header</span>}\n        renderFooter={() => <span style={{ padding: 10 }}>footer</span>}\n        renderSectionHeader={this.renderSectionHeader}\n        renderRow={this.renderRow}\n        stickyHeader\n        stickyProps={{\n          stickyStyle: { zIndex: 999 },\n          topOffset: -83,\n          // isActive: false,\n        }}\n        quickSearchBarStyle={{\n          top: 20,\n        }}\n      />\n    </div>);\n  },\n});\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/indexed.js\n **/"],"sourceRoot":""}