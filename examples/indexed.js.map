{"version":3,"sources":["webpack:///./examples/indexed.js","webpack:///./examples/MyScroller.js"],"names":[],"mappings":"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","file":"indexed.js","sourcesContent":["\nimport 'rmc-list-view/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from 'rmc-list-view';\nimport MyScroller from './MyScroller';\n\nconst NUM_SECTIONS = 20;\nconst NUM_ROWS_PER_SECTION = 10;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => {\n      return dataBlob[sectionID];\n    };\n    const getRowData = (dataBlob, sectionID, rowID) => {\n      return dataBlob[rowID];\n    };\n\n    const dataSource = new ListView.DataSource({\n      getRowData: getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections({}, [], []),\n      headerPressCount: 0,\n    };\n  },\n  componentDidMount() {\n    // simulate ajax\n    setTimeout(() => {\n      const dataBlob = {};\n      const sectionIDs = [];\n      const rowIDs = [];\n      for (let ii = 0; ii < NUM_SECTIONS; ii++) {\n        const sectionName = String.fromCharCode(65 + ii);\n        sectionIDs.push(sectionName);\n        dataBlob[sectionName] = sectionName;\n        rowIDs[ii] = [];\n\n        for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n          const rowName = `S${ii}, R${jj}`;\n          rowIDs[ii].push(rowName);\n          dataBlob[rowName] = rowName;\n        }\n      }\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs),\n      });\n    }, 1000);\n  },\n  render() {\n    return (<div style={{ margin: '10px auto', width: '80%', position: 'relative' }}>\n      <ListView.IndexedList\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span style={{ padding: 10 }}>header</span>}\n        renderFooter={() => <span style={{ padding: 10 }}>footer</span>}\n        renderSectionHeader={(sectionData) => (\n          <div style={{ color: 'blue', padding: 10, backgroundColor: '#ddd' }}>\n            {sectionData}\n          </div>\n        )}\n        renderRow={(rowData) => (<div style={{ padding: 10 }}>Hello: {rowData}</div>) }\n        renderScrollComponent={props => <MyScroller {...props} style={{ height: 600, overflow: 'auto' }} />}\n        quickSearchBarStyle={{\n          position: 'absolute',\n          top: 20, right: 30\n        }}\n        onQuickSearch={(sectionID) => console.log(sectionID) }\n        delayTime={1000}\n        delayActivityIndicator={\n          <div style={{padding: 25, textAlign: 'center' }}>delay rendering...</div>\n        }\n      />\n    </div>);\n  },\n});\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/indexed.js\n **/","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst throttle = function (fn, delay) {\n  let allowSample = true;\n  return function (e) {\n    if (allowSample) {\n      allowSample = false;\n      setTimeout(function () { allowSample = true; }, delay);\n      fn(e);\n    }\n  };\n};\n\nconst SCROLLVIEW = 'ScrollView';\n\nexport default React.createClass({\n  componentDidMount() {\n    this.__handleScroll = this._handleScroll();\n    ReactDOM.findDOMNode(this.refs[SCROLLVIEW]).addEventListener('scroll', this.__handleScroll);\n  },\n  componentWillUnmount() {\n    ReactDOM.findDOMNode(this.refs[SCROLLVIEW]).removeEventListener('scroll', this.__handleScroll);\n  },\n  handleScroll(e) {\n    const { onScroll = (ev) => { } } = this.props;\n    onScroll(e);\n  },\n  _handleScroll(e) {\n    let handleScroll = (ev) => {};\n    // let handleScroll = this.handleScroll;\n    if (this.props.scrollEventThrottle && this.props.onScroll) {\n      handleScroll = throttle(this.handleScroll, this.props.scrollEventThrottle);\n    }\n    return handleScroll;\n  },\n  render() {\n    const { children, className, style } = this.props;\n    const divProps = { className, style };\n    return React.cloneElement(<div ref={SCROLLVIEW} />, divProps, children);\n  },\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/MyScroller.js\n **/"],"sourceRoot":""}