{"version":3,"sources":["webpack:///./examples/indexed.js","webpack:///./examples/MyScroller.js"],"names":["NUM_SECTIONS","NUM_ROWS_PER_SECTION","Demo","createClass","getInitialState","getSectionData","dataBlob","sectionID","getRowData","rowID","dataSource","DataSource","getSectionHeaderData","rowHasChanged","row1","row2","sectionHeaderHasChanged","s1","s2","cloneWithRowsAndSections","headerPressCount","componentDidMount","setTimeout","sectionIDs","rowIDs","ii","sectionName","String","fromCharCode","push","jj","rowName","setState","state","render","margin","width","position","padding","sectionData","color","backgroundColor","rowData","props","height","overflow","top","right","console","log","textAlign","document","getElementById","React","throttle","fn","delay","allowSample","e","SCROLLVIEW","__handleScroll","_handleScroll","findDOMNode","refs","addEventListener","componentWillUnmount","removeEventListener","handleScroll","onScroll","ev","scrollEventThrottle","children","className","style","divProps","cloneElement"],"mappings":"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","file":"indexed.js","sourcesContent":["\nimport 'rmc-list-view/assets/index.less';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport ListView from 'rmc-list-view';\nimport MyScroller from './MyScroller';\n\nconst NUM_SECTIONS = 20;\nconst NUM_ROWS_PER_SECTION = 10;\n\nconst Demo = React.createClass({\n  getInitialState() {\n    const getSectionData = (dataBlob, sectionID) => {\n      return dataBlob[sectionID];\n    };\n    const getRowData = (dataBlob, sectionID, rowID) => {\n      return dataBlob[rowID];\n    };\n\n    const dataSource = new ListView.DataSource({\n      getRowData: getRowData,\n      getSectionHeaderData: getSectionData,\n      rowHasChanged: (row1, row2) => row1 !== row2,\n      sectionHeaderHasChanged: (s1, s2) => s1 !== s2,\n    });\n\n    return {\n      dataSource: dataSource.cloneWithRowsAndSections({}, [], []),\n      headerPressCount: 0,\n    };\n  },\n  componentDidMount() {\n    // simulate ajax\n    setTimeout(() => {\n      const dataBlob = {};\n      const sectionIDs = [];\n      const rowIDs = [];\n      for (let ii = 0; ii < NUM_SECTIONS; ii++) {\n        const sectionName = String.fromCharCode(65 + ii);\n        sectionIDs.push(sectionName);\n        dataBlob[sectionName] = sectionName;\n        rowIDs[ii] = [];\n\n        for (let jj = 0; jj < NUM_ROWS_PER_SECTION; jj++) {\n          const rowName = `S${ii}, R${jj}`;\n          rowIDs[ii].push(rowName);\n          dataBlob[rowName] = rowName;\n        }\n      }\n      this.setState({\n        dataSource: this.state.dataSource.cloneWithRowsAndSections(dataBlob, sectionIDs, rowIDs),\n      });\n    }, 1000);\n  },\n  render() {\n    return (<div style={{ margin: '10px auto', width: '80%', position: 'relative' }}>\n      <ListView.IndexedList\n        dataSource={this.state.dataSource}\n        renderHeader={() => <span style={{ padding: 10 }}>header</span>}\n        renderFooter={() => <span style={{ padding: 10 }}>footer</span>}\n        renderSectionHeader={(sectionData) => (\n          <div style={{ color: 'blue', padding: 10, backgroundColor: '#ddd' }}>\n            {sectionData}\n          </div>\n        )}\n        renderRow={(rowData) => (<div style={{ padding: 10 }}>Hello: {rowData}</div>) }\n        renderScrollComponent={props => <MyScroller {...props} style={{ height: 600, overflow: 'auto' }} />}\n        quickSearchBarStyle={{\n          position: 'absolute',\n          top: 20, right: 30\n        }}\n        onQuickSearch={(sectionID) => console.log(sectionID) }\n        delayTime={1000}\n        delayActivityIndicator={\n          <div style={{padding: 25, textAlign: 'center' }}>delay rendering...</div>\n        }\n      />\n    </div>);\n  },\n});\n\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/indexed.js\n **/","import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst throttle = function (fn, delay) {\n  let allowSample = true;\n  return function (e) {\n    if (allowSample) {\n      allowSample = false;\n      setTimeout(function () { allowSample = true; }, delay);\n      fn(e);\n    }\n  };\n};\n\nconst SCROLLVIEW = 'ScrollView';\n\nexport default React.createClass({\n  componentDidMount() {\n    this.__handleScroll = this._handleScroll();\n    ReactDOM.findDOMNode(this.refs[SCROLLVIEW]).addEventListener('scroll', this.__handleScroll);\n  },\n  componentWillUnmount() {\n    ReactDOM.findDOMNode(this.refs[SCROLLVIEW]).removeEventListener('scroll', this.__handleScroll);\n  },\n  handleScroll(e) {\n    const { onScroll = (ev) => { } } = this.props;\n    onScroll(e);\n  },\n  _handleScroll(e) {\n    let handleScroll = (ev) => {};\n    // let handleScroll = this.handleScroll;\n    if (this.props.scrollEventThrottle && this.props.onScroll) {\n      handleScroll = throttle(this.handleScroll, this.props.scrollEventThrottle);\n    }\n    return handleScroll;\n  },\n  render() {\n    const { children, className, style } = this.props;\n    const divProps = { className, style };\n    return React.cloneElement(<div ref={SCROLLVIEW} />, divProps, children);\n  },\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/MyScroller.js\n **/"],"sourceRoot":""}